# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build:
    working_directory: ~/repo
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: circleci/golang:1.15.8
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: Setup env
          command: |
            echo 'export CI_VERSION_TAG=0.1.${CIRCLE_BUILD_NUM}' >> $BASH_ENV
      - restore_cache:
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}
      - run:
          name: Install Dependencies
          command: go mod download
      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/md"
      - run:
          name: Run tests
          command: |
            mkdir -p /tmp/test-reports
            gotestsum --junitfile /tmp/test-reports/unit-tests.xml
      - store_test_results:
          path: /tmp/test-reports
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build and push Docker image
          command: |
            echo "${CI_BUILD_TOKEN}" | docker login -u gitlab-ci-token "${CI_REGISTRY}" --password-stdin
            docker build -t "${CI_REGISTRY}/${CI_PROJECT_PATH}:${CI_VERSION_TAG}" .
            docker push "${CI_REGISTRY}/${CI_PROJECT_PATH}:${CI_VERSION_TAG}"
      - run:
          name: Deploy
          command: |
            ssh -o StrictHostKeyChecking=no "${SERVER_USER}@${SERVER_ADDRESS}" "/bin/bash ./scripts/deploy/circle-docker.sh ${CI_REGISTRY}/${CI_PROJECT_PATH}:${CI_VERSION_TAG}"

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build

