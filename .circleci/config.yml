version: 2.1

orbs: 
  discord: antonioned/discord@0.1.0

executors:
  image-base:
    docker:
      - image: cimg/base:2022.05
  image-go:
    docker:
      - image: cimg/go:1.18.2

jobs:
  test:
    executor: image-go
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}
      - run:
          name: Install Dependencies
          command: go mod download
      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/md"
      - run:
          name: Run tests
          command: |
            mkdir -p /tmp/test-reports
            PACKAGES="$(go list ./... | circleci tests split --split-by=timings --timings-type=classname)"
            PACKAGE_NAMES=$(echo $PACKAGES | tr -d '\n')
            echo "Testing the following packages:"
            echo "${PACKAGE_NAMES}"
            gotestsum --junitfile /tmp/test-reports/report.xml -- -covermode=count -coverprofile=/tmp/test-reports/coverage.out ${PACKAGE_NAMES}
      - store_test_results:
          path: /tmp/test-reports
      - discord/status:
          fail_only: true
          failure_message: ":red_circle: **${CIRCLE_USERNAME}'s** **[${CIRCLE_JOB}](${CIRCLE_BUILD_URL})** job on the **${CIRCLE_BRANCH}** of **${CIRCLE_PROJECT_REPONAME}** failed."
          webhook: "${DISCORD_STATUS_WEBHOOK}"

  build:
    executor: image-base
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build image
          command: |
            docker build --target production -t "${CI_PROJECT_PATH}:latest" .
      - run:
          name: Archive image
          command: docker save -o image.tar "${CI_PROJECT_PATH}" 
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar
      - discord/status:
          fail_only: true
          failure_message: ":red_circle: **${CIRCLE_USERNAME}'s** **[${CIRCLE_JOB}](${CIRCLE_BUILD_URL})** job on the **${CIRCLE_BRANCH}** of **${CIRCLE_PROJECT_REPONAME}** failed."
          webhook: "${DISCORD_STATUS_WEBHOOK}"

  publish:
    executor: image-base
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Load archived image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish image
          command: |
            echo "${CI_BUILD_TOKEN}" | docker login -u averagebit --password-stdin
            docker tag "${CI_PROJECT_PATH}:latest" "${CI_PROJECT_PATH}:${CIRCLE_TAG}"
            docker push "${CI_PROJECT_PATH}:${CIRCLE_TAG}"
            docker push "${CI_PROJECT_PATH}:latest"
      - discord/status:
          fail_only: true
          failure_message: ":red_circle: **${CIRCLE_USERNAME}'s** **[${CIRCLE_JOB}](${CIRCLE_BUILD_URL})** job on the **${CIRCLE_BRANCH}** of **${CIRCLE_PROJECT_REPONAME}** failed."
          webhook: "${DISCORD_STATUS_WEBHOOK}"

  deploy:
    executor: image-base
    steps:
      - run:
          name: Deploy
          command: |
            ssh -o StrictHostKeyChecking=no "${SSH_USER}@${SSH_HOST}" "
              sudo docker pull '${CI_PROJECT_PATH}:${CIRLCE_TAG}' &&
              sudo docker rm -f circle-docker || true &&
              sudo docker run -d --name circle-docker --restart always '${CI_PROJECT_PATH}:${CIRCLE_TAG}'
            "
      - discord/status:
          fail_only: true
          failure_message: ":red_circle: **${CIRCLE_USERNAME}'s** **[${CIRCLE_JOB}](${CIRCLE_BUILD_URL})** job on the **${CIRCLE_BRANCH}** of **${CIRCLE_PROJECT_REPONAME}** failed."
          webhook: "${DISCORD_STATUS_WEBHOOK}"

workflows:
  ci:
    jobs:
      - discord/approval:
          message: ":green_circle: ${CIRCLE_USERNAME} triggered a **[workflow](https://circleci.com/workflow-run/${CIRCLE_WORKFLOW_ID})** on the **${CIRCLE_BRANCH}** of **${CIRCLE_PROJECT_REPONAME}**."
          webhook: "${DISCORD_APPROVAL_WEBHOOK}"
      - test:
          context:
            - discord
          filters: &filters
            tags:
              ignore: /^.*-DEV.*/
            branches:
              ignore: /.*/
      - build:
          context:
            - ci
            - discord
          filters:
            <<: *filters
      - publish:
          context:
            - ci
            - discord
          requires:
            - test
            - build
          filters:
            <<: *filters
      - deploy:
          context:
            - ci
            - ci-test-server-ssh
            - discord
          requires:
            - publish
          filters:
            <<: *filters
