version: 2.1

orbs: 
  discord: antonioned/discord@0.1.0
  snyk: snyk/snyk@1.1.2

executors:
  image-base:
    docker:
      - image: cimg/base:2022.05
  image-go:
    docker:
      - image: cimg/go:1.18.2

jobs:
  test:
    executor: image-go
    steps:
      - discord/approval:
          message: ":zap: **${CIRCLE_USERNAME}** triggered a workflow for **${CIRCLE_TAG}**."
          webhook: "${DISCORD_APPROVAL_WEBHOOK}"
      - checkout
      - restore_cache:
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}
      - run:
          name: Install Dependencies
          command: go mod download
      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/md"
      - run:
          name: Run tests
          command: |
            mkdir -p /tmp/test-reports
            PACKAGES="$(go list ./... | circleci tests split --split-by=timings --timings-type=classname)"
            PACKAGE_NAMES=$(echo $PACKAGES | tr -d '\n')
            echo "Testing the following packages:"
            echo "${PACKAGE_NAMES}"
            gotestsum --junitfile /tmp/test-reports/report.xml -- -covermode=count -coverprofile=/tmp/test-reports/coverage.out ${PACKAGE_NAMES}
      - store_test_results:
          path: /tmp/test-reports
      - discord/status:
          fail_only: true
          failure_message: ":exclamation: **${CIRCLE_USERNAME}**'s **[${CIRCLE_JOB}](${CIRCLE_BUILD_URL})** job for **${CIRCLE_TAG}** failed."
          webhook: "${DISCORD_STATUS_WEBHOOK}"

  build:
    executor: image-base
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build image
          command: |
            docker build --target production -t "${REGISTRY_PROJECT_PATH}:latest" .
      - snyk/scan:
          docker-image-name: "${REGISTRY_PROJECT_PATH}:latest"
          fail-on-issues: true
          monitor-on-build: true
          project: '${CIRCLE_PROJECT_REPONAME}'
          severity-threshold: high
          target-file: Dockerfile
          token-variable: SNYK_TOKEN
      - run:
          name: Archive image
          command: docker save -o image.tar "${REGISTRY_PROJECT_PATH}" 
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar
      - discord/status:
          fail_only: true
          failure_message: ":exclamation: **${CIRCLE_USERNAME}**'s **[${CIRCLE_JOB}](${CIRCLE_BUILD_URL})** job for **${CIRCLE_TAG}** failed."
          webhook: "${DISCORD_STATUS_WEBHOOK}"

  publish:
    executor: image-base
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Load archived image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish image
          command: |
            echo "${REGISTRY_DOCKER_TOKEN}" | docker login -u averagebit --password-stdin
            docker tag "${REGISTRY_PROJECT_PATH}:latest" "${REGISTRY_PROJECT_PATH}:${CIRCLE_TAG}"
            docker push "${REGISTRY_PROJECT_PATH}:${CIRCLE_TAG}"
            docker push "${REGISTRY_PROJECT_PATH}:latest"
      - discord/status:
          fail_only: true
          failure_message: ":exclamation: **${CIRCLE_USERNAME}**'s **[${CIRCLE_JOB}](${CIRCLE_BUILD_URL})** job for **${CIRCLE_TAG}** failed."
          webhook: "${DISCORD_STATUS_WEBHOOK}"

  deploy:
    executor: image-base
    steps:
      - run:
          name: Deploy
          command: |
            ssh -o StrictHostKeyChecking=no "${SSH_USER}@${SSH_HOST}" "
              sudo docker pull '${REGISTRY_PROJECT_PATH}:${CIRLCE_TAG}' &&
              sudo docker rm -f circle-docker || true &&
              sudo docker run -d --name circle-docker --restart always '${REGISTRY_PROJECT_PATH}:${CIRCLE_TAG}'
            "
      - discord/status:
          fail_only: true
          failure_message: ":exclamation: **${CIRCLE_USERNAME}**'s **[${CIRCLE_JOB}](${CIRCLE_BUILD_URL})** job for **${CIRCLE_TAG}** failed."
          webhook: "${DISCORD_STATUS_WEBHOOK}"
      - discord/status:
          success_only: true
          success_message: ":tada: **${CIRCLE_USERNAME}**'s workflow for **${CIRCLE_TAG}** finished."
          webhook: "${DISCORD_STATUS_WEBHOOK}"

workflows:
  ci:
    jobs:
      - test:
          context:
            - discord
          filters: &filters
            branches:
              only: main
      - build:
          context:
            - discord
            - registry
            - snyk
          filters:
            <<: *filters
      - publish:
          context:
            - discord
            - registry
          requires:
            - test
            - build
          filters:
            <<: *filters
      - deploy:
          context:
            - ci-test-server-ssh
            - discord
            - registry
          requires:
            - publish
          filters:
            <<: *filters
